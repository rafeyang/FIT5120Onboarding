

@{
    ViewBag.Title = "Information";
}

<h2>Information</h2>
<link href="~/Content/StyleSheet1.css" rel="stylesheet" />
<div id="tooltip-container">
    <p id="tooltip-text">Tooltip text</p>
</div>
<h3 id="line_title">Percentage of garbage recycle</h3>
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-6">
        <div>
            <div id="line_chart"></div>
        </div>
    </div>
    <div class="col-md-5"></div>
</div>
<script src="~/Scripts/d3.v3.min.js"></script>
<script>
    var listInfo = '@ViewBag.Info';
    var a = listInfo.replace(/&quot;/g,'"')
    var testy = JSON.parse(a);

    function draw(divID) {
        var drawID = '#' + divID;
        var width = 500, height = 300;
        var y1 = JSON.parse(a);
        lineChart(y1);
        function lineChart(y1) {
            let dataset = y1;

            d3.select(drawID).select('svg').remove();
            var padding = { top: 10, right: 30, bottom: 50, left: 50 };
            var line_chart = d3.select(drawID).append('svg')
                .attr("width", width).attr("height", height).append('g')
                .attr('transform', "translate(" + padding.left + ',' + padding.top + ')');

            // 创建x轴的比例尺(线性比例尺)
            var xScale = d3.scale.linear()
                .domain(d3.extent(dataset, function (d) {
                    return d.Year;
                }))
                .range([0, width - padding.left - padding.right]);
            // 创建y轴的比例尺(线性比例尺)
            var yScale = d3.scale.linear()
                .domain([0, d3.max(dataset, function (d) {
                    return d.Percentage;
                })])
                .range([height - padding.top - padding.bottom, 0]);
            // 创建x轴
            var xAxis = d3.svg.axis()
                .scale(xScale)
                .orient('bottom');
            // 创建y轴
            var yAxis = d3.svg.axis()
                .scale(yScale)
                .orient('left');
            // 添加SVG元素并与x轴进行“绑定”
            line_chart.append('g')
                .attr('class', 'axis')
                .attr('transform', 'translate(0,' + (height - padding.top - padding.bottom) + ')')
                .call(xAxis)
                .append('text')
                .text("Year")
                .attr("dx", "400px")
                .attr("dy", "-10px");
            // 添加SVG元素并与y轴进行“绑定”
            line_chart.append('g')
                .attr('class', 'axis')
                .call(yAxis)
                .append('text')
                .text("Percentage(%)")
                .attr("dx", "3px")
                .attr("dy", "10px");

            line_chart.selectAll('text')
                .attr('font-size', '12px')
                .style('fill', 'rgb(0,0,0)')
            // 添加折线
            var line = d3.svg.line()
                .x(function (d) {
                    return xScale(d.Year)
                })
                .y(function (d) {
                    return yScale(d.Percentage);
                })
                .interpolate('linear');// 选择线条的类型
            // 添加path元素，并通过line()计算出值来赋值
            line_chart.append('path')
                .attr('class', 'line')
                .attr('d', line(dataset));


            line_chart.selectAll('path')
                .attr('stroke', 'rgb(0,0,0)')
                .attr('fill', 'none')

            // 添加点
            line_chart.selectAll('circle')
                .data(dataset)
                .enter()
                .append('circle')
                .attr('cx', function (d) {
                    return xScale(d.Year);
                })
                .attr('cy', function (d) {
                    return yScale(d.Percentage);
                })
                .attr('r', 5)
                .attr('fill', 'rgb(179, 178, 125)')
                //.on('mouseover', mouseover)
                //.on('mouseout', mouseout)
                //.on('mousemove', tipPos);
        }

        //function mouseover(datum) {
        //    tooltip.style("display", "block")
        //    tooltip.select("#tooltip-text")
        //        .text(datum.value + " trillion");

        //}

        //function mouseout() {
        //    tooltip.style("display", "none");
        //}

        //function tipPos() {
        //    tooltip
        //        .style("left", (mouseLocation()["x"] + 10 + "px"))
        //        .style("top", (mouseLocation()["y"] + 10 + "px"));
        //}

        //function mouseLocation(e) {
        //    e = e || window.event;
        //    var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;//ie||chrome
        //    var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
        //    var x = e.pageX || (e.clientX + scrollX);//firefox
        //    var y = e.pageY || (e.clientY + scrollY);
        //    return { "x": x, "y": y };
        //}
    }
    draw("line_chart")
</script>